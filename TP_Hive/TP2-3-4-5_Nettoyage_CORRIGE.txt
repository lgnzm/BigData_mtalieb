--#######################################################################################################################################
--#######################################################################################################################################
--
--#######################################################################################################################################
CREATE DATABASE IF NOT EXISTS assessdb;
USE assessdb;

--#######################################################################################################################################
// Créon une table intérimaire 'firstname001' qui va permettre d'enlever l'en-tête des colonnes:

CREATE TABLE IF NOT EXISTS assessdb.firstname001 (
  firstnameid    string,
  firstname      string,
  sex            string
)
CLUSTERED BY (firstnameid) INTO 1 BUCKETS
STORED AS orc 
TBLPROPERTIES('transactional' = 'true','orc.compress'='ZLIB','orc.create.index'='true');

TRUNCATE TABLE assessdb.firstname001;

// Chargeons maintenant la table:

INSERT INTO TABLE assessdb.firstname001 
SELECT firstnameid, firstname, sex 
FROM retrievedb.rawfirstname 
WHERE firstnameid <> '"id"';

--#######################################################################################################################################

// Maintenant on veut trimer les espaces avant ou après les prénoms.
// Pour cela on va créer une seconde table intérimaire 'firstname002'

CREATE TABLE IF NOT EXISTS assessdb.firstname002 (
  firstnameid    string,
  firstname      string,
  sex            string
)
CLUSTERED BY (firstnameid) INTO 1 BUCKETS
STORED AS orc 
TBLPROPERTIES('transactional' = 'true','orc.compress'='ZLIB','orc.create.index'='true');

TRUNCATE TABLE assessdb.firstname002;

// Chargeons les données à partir de  'firstname001' et en effectuant le nettoyage des espaces avec rtrim() et ltrim():

INSERT INTO TABLE assessdb.firstname002 
SELECT firstnameid, rtrim(ltrim(firstname)), rtrim(ltrim(sex)) 
FROM assessdb.firstname001;


--#######################################################################################################################################

// Nous souhatons concertir firstnameid (la première colonne) de string à integer, et aussi enlever les guillemets avant et après chaque prénom. Créons donc une autre table intermédiaire firstname003:

CREATE TABLE IF NOT EXISTS assessdb.firstname003 (
  firstnameid    int,
  firstname      string,
  sex            string
)
CLUSTERED BY (firstnameid) INTO 1 BUCKETS
STORED AS orc 
TBLPROPERTIES('transactional' = 'true','orc.compress'='ZLIB','orc.create.index'='true');

TRUNCATE TABLE assessdb.firstname003;

// Chargeons maintenant les données dans firstnameà03 à partir (bien sûr) de firstname002:

INSERT INTO TABLE assessdb.firstname003 
SELECT CAST(firstnameid as INT), SUBSTRING(firstname,2,LENGTH(firstname)-2), SUBSTRING(sex,2,LENGTH(sex)-2) 
FROM assessdb.firstname002;

--#######################################################################################################################################

// Créons maintenant la table finale de données nettoyées!

CREATE TABLE IF NOT EXISTS assessdb.firstname (
  firstnameid    int,
  firstname      string,
  sex            string
)
CLUSTERED BY (firstnameid) INTO 1 BUCKETS
STORED AS orc 
TBLPROPERTIES('transactional' = 'true','orc.compress'='ZLIB','orc.create.index'='true');

TRUNCATE TABLE assessdb.firstname;

// Et chargeons-la avec un Order By su l'ID:

INSERT INTO TABLE assessdb.firstname 
SELECT firstnameid, firstname, sex 
FROM assessdb.firstname003 
ORDER BY firstnameid;

TRUNCATE TABLE assessdb.firstname;

// Faisons sur cette table un SELECT avec un SORT BY pour vérifier que tout colle:

SELECT firstnameid, firstname, sex from assessdb.firstname SORT BY firstname LIMIT 10;

--#######################################################################################################################################
--#######################################################################################################################################
CREATE TABLE IF NOT EXISTS assessdb.lastname001 (
  lastnameid    string,
  lastname      string
)
CLUSTERED BY (lastnameid) INTO 1 BUCKETS
STORED AS orc 
TBLPROPERTIES('transactional' = 'true','orc.compress'='ZLIB','orc.create.index'='true');

TRUNCATE TABLE assessdb.lastname001;

INSERT INTO TABLE assessdb.lastname001 
SELECT lastnameid, lastname 
FROM retrievedb.rawlastname 
WHERE lastnameid <> '"id"';

--#######################################################################################################################################
CREATE TABLE IF NOT EXISTS assessdb.lastname002 (
  lastnameid    string,
  lastname      string
)
CLUSTERED BY (lastnameid) INTO 1 BUCKETS
STORED AS orc 
TBLPROPERTIES('transactional' = 'true','orc.compress'='ZLIB','orc.create.index'='true');

TRUNCATE TABLE assessdb.lastname002;

INSERT INTO TABLE assessdb.lastname002 
SELECT lastnameid, rtrim(ltrim(lastname)) 
FROM assessdb.lastname001;


--#######################################################################################################################################
CREATE TABLE IF NOT EXISTS assessdb.lastname003 (
  lastnameid    int,
  lastname      string
)
CLUSTERED BY (lastnameid) INTO 1 BUCKETS
STORED AS orc 
TBLPROPERTIES('transactional' = 'true','orc.compress'='ZLIB','orc.create.index'='true');

TRUNCATE TABLE assessdb.lastname003;

INSERT INTO TABLE assessdb.lastname003 
SELECT CAST(lastnameid as INT), SUBSTRING(lastname,2,LENGTH(lastname)-2) 
FROM assessdb.lastname002;

--#######################################################################################################################################
CREATE TABLE IF NOT EXISTS assessdb.lastname (
  lastnameid    int,
  lastname      string
)
CLUSTERED BY (lastnameid) INTO 1 BUCKETS
STORED AS orc 
TBLPROPERTIES('transactional' = 'true','orc.compress'='ZLIB','orc.create.index'='true');

TRUNCATE TABLE assessdb.lastname;

INSERT INTO TABLE assessdb.lastname 
SELECT lastnameid, lastname 
FROM assessdb.lastname003 
ORDER BY lastnameid;

--#######################################################################################################################################
--#######################################################################################################################################

// Maintenant nous allons créer la COMBINAISON DE TABLES 'person' (en passant par deux tables intermédiaires) qui regroupera les tables 'firstname' et 'lastname' grace à des JOIN:

CREATE TABLE IF NOT EXISTS assessdb.person001 (
  persid         string,
  firstnameid    string,
  lastnameid     string
)
CLUSTERED BY (persid) INTO 1 BUCKETS
STORED AS orc 
TBLPROPERTIES('transactional' = 'true','orc.compress'='ZLIB','orc.create.index'='true');

TRUNCATE TABLE assessdb.person001;

INSERT INTO TABLE assessdb.person001 
SELECT persid, firstnameid, lastnameid 
FROM retrievedb.rawperson 
WHERE persid <> '"id"';

--#######################################################################################################################################
CREATE TABLE IF NOT EXISTS assessdb.person002 (
  persid         int,
  firstnameid    int,
  lastnameid     int
)
CLUSTERED BY (persid) INTO 1 BUCKETS
STORED AS orc 
TBLPROPERTIES('transactional' = 'true','orc.compress'='ZLIB','orc.create.index'='true');

TRUNCATE TABLE assessdb.person002;

// Notez qu'on converit dans ce qui suit le type de persid, firstnameid et lastnameid:

INSERT INTO TABLE assessdb.person002 
SELECT CAST(persid as INT), CAST(firstnameid as INT), CAST(lastnameid as INT) 
FROM assessdb.person001;

--#######################################################################################################################################
CREATE TABLE IF NOT EXISTS assessdb.person (
  persid         int,
  firstnameid    int,
  lastnameid     int
)
CLUSTERED BY (persid) INTO 1 BUCKETS
STORED AS orc 
TBLPROPERTIES('transactional' = 'true','orc.compress'='ZLIB','orc.create.index'='true');

TRUNCATE TABLE assessdb.person;

INSERT INTO TABLE assessdb.person 
SELECT persid, firstnameid, lastnameid 
FROM assessdb.person002;

--#######################################################################################################################################
CREATE TABLE IF NOT EXISTS assessdb.personfull(
  persid       int,
  firstnameid  int,
  firstname    string,
  lastnameid   int,
  lastname     string,
  sex          string
)
CLUSTERED BY (persid) INTO 1 BUCKETS
STORED AS orc 
TBLPROPERTIES('transactional' = 'true','orc.compress'='ZLIB','orc.create.index'='true');

TRUNCATE TABLE assessdb.personfull;

INSERT INTO TABLE assessdb.personfull
SELECT person.persid, person.firstnameid, firstname.firstname, person.lastnameid, lastname.lastname, firstname.sex
FROM assessdb.firstname 
JOIN assessdb.person
ON firstname.firstnameid = person.firstnameid
JOIN assessdb.lastname 
ON lastname.lastnameid = person.lastnameid;

--#######################################################################################################################################
--#######################################################################################################################################

